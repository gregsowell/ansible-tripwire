---
- name: Install tripwire on enterprise linux
  hosts: Greg-rocky9
  gather_facts: false
  become: yes
  vars:
    # The following should be supplied at run time securely
    site_key: Site key contents
    site_key_password: Password for site key
    local_key_password: Password for local key

  tasks:
    - name: Install epel-release
      ansible.builtin.dnf:
        name: epel-release
        state: present

    - name: Install tripwire
      ansible.builtin.dnf:
        name: tripwire
        state: present

    # - name: Install the tripwire site key from the contents of the site_key variable
    #   ansible.builtin.copy:
    #     content: "{{ site_key }}"
    #     dest: /etc/tripwire/site.key
    #     owner: root
    #     group: root
    #     mode: 0600
    #   no_log: true

    # - name: Generate the local key based on hostname
    #   # ansible.builtin.shell: /usr/sbin/tripwire --init -P local.key -L /var/lib/tripwire/$(hostname)-local.key -Q $(echo "{{ local_key_password }}" | sha256sum | awk '{print $1}')
    #   # ansible.builtin.shell: "twadmin --generate-keys -L /etc/tripwire/${HOSTNAME}-local.key -Q {{ local_key_password }}"
    #   ansible.builtin.shell: "twadmin --generate-keys -L /etc/tripwire/{{ inventory_hostname }}-local.key" # -Q {{ local_key_password }}"

# Enter the local keyfile passphrase:
# Verify the local keyfile passphrase:

    # - name: Install pexpect
    #   ansible.builtin.command: pip3 install pexpect
    #   delegate_to: localhost
    #   run_once: true
    #   become: false

    - name: Install pexpect Python package on the remote host
      ansible.builtin.pip:
        name: pexpect

    - name: Use expect to generate local key based on hostname
      ansible.builtin.expect:
        command: twadmin --generate-keys -L /etc/tripwire/{{ inventory_hostname }}-local.key
        responses:
          Enter the local keyfile passphrase: "{{ local_key_password }}"
          Verify the local keyfile passphrase: "{{ local_key_password }}"

    - name: Use expect to generate site key
      ansible.builtin.expect:
        command: twadmin --generate-keys -S /etc/tripwire/site.key
        responses:
          Enter the site keyfile passphrase: "{{ site_key_password }}"
          Verify the site keyfile passphrase: "{{ site_key_password }}"

    - name: Change MAILNOVIOLATIONS to false in /etc/tripwire/twcfg.txt
      ansible.builtin.lineinfile:
        path: /etc/tripwire/twcfg.txt
        regexp: '^MAILNOVIOLATIONS\s*=\s*true'
        line: 'MAILNOVIOLATIONS       =false'

    - name: Use expect to generate config file
      ansible.builtin.expect:
        command: twadmin --create-cfgfile -S /etc/tripwire/site.key /etc/tripwire/twcfg.txt
        responses:
          Please enter your site passphrase: "{{ site_key_password }}"

    - name: Use expect to generate policy file
      ansible.builtin.expect:
        command: twadmin --create-polfile -S /etc/tripwire/site.key /etc/tripwire/twpol.txt
        responses:
          Please enter your site passphrase: "{{ site_key_password }}"

    - name: Use expect to run tripwire init
      ansible.builtin.expect:
        command: tripwire --init
        responses:
          Please enter your local passphrase: "{{ local_key_password }}"
        timeout: 300

    - name: Run a tripwire check
      ansible.builtin.command: tripwire --check
      register: tripwire_check
      failed_when: '"Integrity check complete." not in tripwire_check.stdout'

    - name: Extract the file path from command output
      set_fact:
        # report_file_path: "{{ tripwire_check | regex_search('Wrote report file: (\\/.*\\.twr)', '\\1') }}"
        report_file_path: "{{ command_output.split('\n') | select('search', 'Wrote report file:') | first | regex_search('Wrote report file: (\\/.*\\.twr)', '\\1') }}"

# tripwire --update --accept-all -r /var/lib/tripwire/report/Greg-rocky9-20241025-162340.twr
# Please enter your local passphrase
    # - name: Run the tripwire database --update
    #   ansible.builtin.command: tripwire --update --accept-all -r "{{ report_file_path }}"
    #   register: tripwire_update

    - name: Use expect to run the tripwire database --update
      ansible.builtin.expect:
        command: tripwire --update --accept-all -r "{{ report_file_path }}"
        responses:
          Please enter your local passphrase: "{{ local_key_password }}"
        timeout: 300
